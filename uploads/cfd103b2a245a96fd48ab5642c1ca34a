{
  "natural_language": [
    "Show employee count by department as a bar chart",
    "Visualize monthly sales trends as a line chart",
    "Display product distribution by category as pie chart",
    "List high-value customers (purchases > $1000)",
    "Show average salary by job level",
    "Find inactive users (no login in 30 days)",
    "Chart weekly website traffic by source",
    "List overdue projects with owners",
    "Show inventory stock levels below threshold",
    "Display customer satisfaction scores by region",
    "Chart employee turnover by quarter",
    "Find products with highest return rates",
    "Show support ticket resolution times",
    "Visualize sales funnel conversion rates",
    "List most active support agents"
  ],
  "sql": [
    "SELECT department_name, COUNT(employee_id) AS employee_count FROM employees GROUP BY department_name ORDER BY employee_count DESC",
    "SELECT DATE_TRUNC('month', order_date) AS month, SUM(amount) AS sales FROM orders GROUP BY month ORDER BY month",
    "SELECT category, COUNT(product_id) AS product_count FROM products GROUP BY category",
    "SELECT customer_name, email, SUM(amount) AS total_spent FROM customers JOIN orders USING(customer_id) GROUP BY customer_id HAVING SUM(amount) > 1000 ORDER BY total_spent DESC",
    "SELECT job_level, ROUND(AVG(salary), 2) AS avg_salary FROM employees GROUP BY job_level",
    "SELECT username, last_login FROM users WHERE last_login < NOW() - INTERVAL '30 days'",
    "SELECT traffic_source, DATE_TRUNC('week', visit_date) AS week, COUNT(*) AS visits FROM web_traffic GROUP BY traffic_source, week ORDER BY week",
    "SELECT project_name, owner_name, due_date FROM projects WHERE status = 'overdue'",
    "SELECT product_name, stock_quantity FROM inventory WHERE stock_quantity < reorder_level",
    "SELECT region, AVG(satisfaction_score) AS avg_score FROM customer_feedback GROUP BY region ORDER BY avg_score DESC",
    "SELECT EXTRACT(QUARTER FROM departure_date) AS quarter, COUNT(*) AS turnover_count FROM employee_history WHERE status = 'left' GROUP BY quarter",
    "SELECT product_name, (COUNT(CASE WHEN return_flag THEN 1 END)::float/COUNT(*)) AS return_rate FROM orders GROUP BY product_name HAVING COUNT(*) > 10 ORDER BY return_rate DESC LIMIT 5",
    "SELECT ticket_type, AVG(EXTRACT(EPOCH FROM (resolved_at - created_at))/3600 AS avg_hours_to_resolve FROM support_tickets WHERE resolved_at IS NOT NULL GROUP BY ticket_type",
    "SELECT funnel_stage, COUNT(user_id) AS user_count FROM conversion_funnel GROUP BY funnel_stage ORDER BY CASE funnel_stage WHEN 'view' THEN 1 WHEN 'cart' THEN 2 WHEN 'checkout' THEN 3 ELSE 4 END",
    "SELECT agent_name, COUNT(ticket_id) AS resolved_tickets FROM support_tickets WHERE status = 'resolved' GROUP BY agent_name ORDER BY resolved_tickets DESC LIMIT 5"
  ]
}